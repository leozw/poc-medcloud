receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"

# If you need to make a scrape
  # prometheus:
  #   config:
  #     scrape_configs:
  #       - job_name: "node_exporter"
  #         static_configs:
  #           - targets: ["node-exporter:9100"]
  #           # - targets: ['192.168.56.7:9100', '192.168.56.8:9100', '192.168.56.9:9100']

exporters:
  otlphttp:
    endpoint: https://tempo.elvenobservability.com/http
    headers:
      X-Scope-OrgID: "${TENANT_ID}"
      Authorization: "Bearer ${API_TOKEN}"

  prometheusremotewrite:
    endpoint: https://mimir.elvenobservability.com/api/v1/push
    headers:
      X-Scope-OrgID: "${TENANT_ID}"
      Authorization: "Bearer ${API_TOKEN}"

  loki:
    endpoint: "https://loki.elvenobservability.com/loki/api/v1/push"
    default_labels_enabled:
      exporter: false
      job: true
    headers:
      X-Scope-OrgID: "${TENANT_ID}"
      Authorization: "Bearer ${API_TOKEN}"

processors:
  batch: {}
  resource:
    attributes:
    - action: insert
      key: loki.tenant
      value: host.name
  filter:
    metrics:
      exclude:
        match_type: regexp
        metric_names:
          - "go_.*"
          - "scrape_.*"
          - "otlp_.*"
          - "promhttp_.*"

service:
  pipelines:
    metrics:
      receivers: [otlp]
      processors: [batch, filter]
      exporters: [prometheusremotewrite]
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp]
    logs:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [loki]